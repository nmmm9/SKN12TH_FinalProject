# ===== 환경 설정 =====
NODE_ENV=development
PORT=3500
HOST=0.0.0.0

# ===== 데이터베이스 =====
# PostgreSQL 설정
DB_HOST=localhost
DB_PORT=5432
DB_NAME=ddalkkak
DB_USER=postgres
DB_PASSWORD=your_db_password_here
DB_SSL=false
DATABASE_URL=postgresql://postgres:your_db_password_here@localhost:5432/ddalkkak

# Redis 설정
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password_here
REDIS_DB=0

# ===== AI 엔진 =====
# AI 서비스 URL
AI_ENGINE_URL=http://localhost:8001

# Whisper 설정
WHISPER_MODEL_PATH=./ai-engine/models/whisper-large-v3
WHISPER_DEVICE=cpu
WHISPER_LANGUAGE=ko

# Qwen3 설정
QWEN3_MODEL_PATH=./ai-engine/models/qwen3-14b-finetuned
QWEN3_DEVICE=cpu
QWEN3_MAX_TOKENS=2048
QWEN3_TEMPERATURE=0.3

# ===== 보안 =====
# JWT 설정
JWT_SECRET=your_super_secret_jwt_key_here
JWT_EXPIRES_IN=24h
JWT_REFRESH_SECRET=your_refresh_secret_here
JWT_REFRESH_EXPIRES_IN=7d

# 암호화 키 (AES-256) - Multi-tenant OAuth 토큰 암호화용
# 🔐 중요: 반드시 강력한 32바이트 hex 키 사용
# 생성 방법: openssl rand -hex 32
ENCRYPTION_KEY=generate_with_openssl_rand_hex_32

# Multi-tenant 설정
APP_URL=http://localhost:3500

# ===== OAuth 애플리케이션 설정 =====
# 🚨 중요: 아래 설정들은 각 서비스에서 OAuth App을 생성한 후 실제 값으로 교체해야 합니다
# 개인 토큰이 아닌 OAuth App 정보입니다 (Multi-tenant 지원)

# Slack OAuth App 설정
# 생성 위치: https://api.slack.com/apps
# Redirect URL: {APP_URL}/auth/slack/callback
# 필요 권한: channels:read, chat:write, files:read, users:read
SLACK_CLIENT_ID=YOUR-SLACK-CLIENT-ID-HERE
SLACK_CLIENT_SECRET=YOUR-SLACK-CLIENT-SECRET-HERE
SLACK_SIGNING_SECRET=YOUR-SLACK-SIGNING-SECRET-HERE

# Notion OAuth App 설정
# 생성 위치: https://developers.notion.com/docs/authorization
# Redirect URL: {APP_URL}/auth/notion/callback
# 필요 권한: Read content, Update content, Insert content
NOTION_CLIENT_ID=YOUR-NOTION-CLIENT-ID-HERE
NOTION_CLIENT_SECRET=YOUR-NOTION-CLIENT-SECRET-HERE

# Jira OAuth App 설정
# 생성 위치: https://developer.atlassian.com/console/myapps/
# Redirect URL: {APP_URL}/auth/jira/callback
# 필요 권한: read:jira-work, write:jira-work, manage:jira-project
JIRA_CLIENT_ID=YOUR-JIRA-CLIENT-ID-HERE
JIRA_CLIENT_SECRET=YOUR-JIRA-CLIENT-SECRET-HERE

# Google OAuth App 설정 (Calendar API)
# 생성 위치: https://console.cloud.google.com/apis/credentials
# Redirect URL: {APP_URL}/auth/google/callback
# 필요 API: Google Calendar API
# 필요 권한: https://www.googleapis.com/auth/calendar
GOOGLE_CLIENT_ID=YOUR-GOOGLE-CLIENT-ID-HERE
GOOGLE_CLIENT_SECRET=YOUR-GOOGLE-CLIENT-SECRET-HERE

# GitHub OAuth App 설정 (선택사항)
# 생성 위치: https://github.com/settings/applications/new
# Redirect URL: {APP_URL}/auth/github/callback
# 필요 권한: repo, user
GITHUB_CLIENT_ID=YOUR-GITHUB-CLIENT-ID-HERE
GITHUB_CLIENT_SECRET=YOUR-GITHUB-CLIENT-SECRET-HERE

# ===== 파일 저장 =====
# 로컬 파일 저장 경로
UPLOAD_DIR=./uploads
MAX_FILE_SIZE=104857600  # 100MB

# ===== 실시간 처리 =====
# WebSocket 설정
WEBSOCKET_PORT=8080
WEBSOCKET_CORS_ORIGIN=http://localhost:3000

# STT 실시간 처리 설정
STT_CHUNK_DURATION=500  # ms
STT_BUFFER_SIZE=1048576  # 1MB
STT_MAX_LATENCY=2000  # ms

# ===== 모니터링 =====
# 로그 설정
LOG_LEVEL=info
LOG_FILE=./logs/app.log

# ===== 개발 환경 =====
# 개발 모드 설정
DEBUG=true
VERBOSE_LOGGING=true

# ===== 기타 설정 =====
# 시간대
TZ=Asia/Seoul

# 프론트엔드 URL
FRONTEND_URL=http://localhost:3001